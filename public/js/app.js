const hamburguer=document.querySelector(".hamburguer"),email={nombre:"",email:"",telefono:""},emailNews={email:""},formHeader=document.querySelector("#formHeader"),inputName=document.querySelector("#name"),inputEmail=document.querySelector("#email"),inputTel=document.querySelector("#tel"),formNewsletter=document.querySelector("#formNewsletter"),inputEmailNews=document.querySelector("#emailNews");function eventListeners(){hamburguer.addEventListener("click",openCloseNav),inputName.addEventListener("input",validar),inputEmail.addEventListener("input",validar),inputTel.addEventListener("input",validar),inputEmailNews.addEventListener("input",validar),formHeader.addEventListener("submit",sendEmail),formNewsletter.addEventListener("submit",sendEmail)}function openCloseNav(){const e=document.querySelector(".nav");e.classList.toggle("nav--activo"),closeNav(e)}function closeNav(e){document.querySelectorAll(".nav__link").forEach((t,r)=>{t.addEventListener("click",t=>{t.preventDefault();document.querySelector(t.target.attributes.href.value).scrollIntoView({behavior:"smooth"});"A"===t.target.tagName&&e.classList.remove("nav--activo")})}),window.addEventListener("click",t=>{const r=t.target.parentElement;e.classList.contains("nav--activo")&&r!==hamburguer&&e.classList.remove("nav--activo")})}function validar(e){const t=e.target.parentElement;return""===e.target.value.trim()&&"emailNews"!==e.target.id?(showAlert(`El ${e.target.name} es obligatorio`,t),email[e.target.name]="",void comprobarEmail()):"email"!==e.target.name||validarEmail(e.target.value)?"telefono"!==e.target.name||validarTel(e.target.value)?"emailNews"!==e.target.id||validarEmail(e.target.value)?(cleanAlert(t),email[e.target.name]=e.target.value.trim().toLowerCase(),emailNews[e.target.name]=e.target.value.trim().toLowerCase(),comprobarEmail(),void comprobarEmailNews()):(showAlert("El email es invalido",t),emailNews[e.target.name]="",void comprobarEmailNews()):(showAlert("El teléfono es inválido",t),email[e.target.name]="",void comprobarEmail()):(showAlert("El email es inválido",t),email[e.target.name]="",void comprobarEmail())}function showAlert(e,t){cleanAlert(t);const r=t.querySelector(".form__field");r.classList.add("form__field--error"),r.placeholder=e}function cleanAlert(e){const t=e.querySelector(".form__field--error");t&&(t.classList.remove("form__field--error"),t.placeholder="Ingresa tu "+t.name)}function validarEmail(e){return/^\w+([.-_+]?\w+)*@\w+([.-]?\w+)*(\.\w{2,10})+$/.test(e)}function validarTel(e){return/^(\+52|0052|52)?[ -]*[ -]*([0-9][ -]*){10}/.test(e)}function comprobarEmail(){const e=document.querySelector("#btnSubmit");Object.values(email).includes("")?e.disabled=!0:e.disabled=!1}function comprobarEmailNews(){const e=document.querySelector("#btnSubscribe");Object.values(emailNews).includes("")?e.disabled=!0:e.disabled=!1}function sendEmail(e){if(e.preventDefault(),"formNewsletter"===e.target.id){const e=document.querySelector("#spinnerNews");return e.classList.add("form__spinner--activo"),e.classList.remove("form__spinner"),void setTimeout(()=>{e.classList.remove("form__spinner--activo"),e.classList.add("form__spinner"),resetForm();const t=document.createElement("P");t.classList.add("form__exito"),t.textContent="Gracias por suscribirte",formNewsletter.appendChild(t),setTimeout(()=>{t.remove()},2e3)},3e3)}if("formHeader"===e.target.id){const e=document.querySelector("#spinner");return e.classList.add("form__spinner--activo"),e.classList.remove("form__spinner"),void setTimeout(()=>{e.classList.remove("form__spinner--activo"),e.classList.add("form__spinner"),resetForm();const t=document.createElement("P");t.classList.add("form__exito"),t.textContent="Mensaje envíado exitosamente",formHeader.appendChild(t),setTimeout(()=>{t.remove()},2e3)},3e3)}}function resetForm(){email.nombre="",email.email="",email.telefono="",emailNews.email="",formHeader.reset(),formNewsletter.reset(),comprobarEmail(),comprobarEmailNews()}document.addEventListener("DOMContentLoaded",eventListeners);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
