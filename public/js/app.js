const hamburguer=document.querySelector(".hamburguer"),email={nombre:"",email:"",telefono:""},emailNewsletter={emailNews:""},formHeader=document.querySelector("#formHeader"),inputName=document.querySelector("#name"),inputEmail=document.querySelector("#email"),inputTel=document.querySelector("#tel"),formNewsletter=document.querySelector("#formNewsletter"),inputEmailNews=document.querySelector("#emailNews");function eventListeners(){hamburguer.addEventListener("click",openCloseNav),inputName.addEventListener("input",validar),inputEmail.addEventListener("input",validar),inputTel.addEventListener("input",validar),inputEmailNews.addEventListener("input",validar),formHeader.addEventListener("submit",sendEmail),formNewsletter.addEventListener("submit",sendEmail)}function openCloseNav(){const e=document.querySelector(".nav");e.classList.toggle("nav--activo"),closeNavOnClick(e)}function closeNavOnClick(e){document.querySelectorAll(".nav__link").forEach((t,i)=>{t.addEventListener("click",t=>{t.preventDefault();document.querySelector(t.target.attributes.href.value).scrollIntoView({behavior:"smooth"});"A"===t.target.tagName&&e.classList.remove("nav--activo")})}),window.addEventListener("click",t=>{const i=t.target.parentElement;e.classList.contains("nav--activo")&&i!==hamburguer&&e.classList.remove("nav--activo")})}function validar(e){const t=e.target,i=t.parentElement,r=t.name,l=t.value.trim().toLowerCase();return""===l&&"emailNews"!==r?(showAlert(`El ${r} es obligatorio`,i),email[r]="",void checkEmail()):"email"!==r||isValidEmail(l)?"telefono"!==r||isValidTel(l)?"emailNews"!==r||isValidEmail(l)?(cleanAlert(i),email[r]=l,emailNewsletter[r]=l,console.log(email),checkEmail(),void checkEmailNewsletter()):(showAlert("El email es invalido",i),delete email.emailNews,emailNewsletter[r]="",void checkEmailNewsletter()):(showAlert("El teléfono es inválido",i),email[r]="",void checkEmail()):(showAlert("El email es inválido",i),email[r]="",void checkEmail())}function showAlert(e,t){cleanAlert(t);const i=t.querySelector(".form__field");i.classList.add("form__field--error"),i.placeholder=e}function cleanAlert(e){const t=e.querySelector(".form__field--error");t&&(t.classList.remove("form__field--error"),t.placeholder="Ingresa tu "+t.name)}function isValidEmail(e){return/^\w+([.-_+]?\w+)*@\w+([.-]?\w+)*(\.\w{2,10})+$/.test(e)}function isValidTel(e){return/^(\+52|0052|52)?[ -]*[ -]*([0-9][ -]*){10}/.test(e)}function checkEmail(){const e=document.querySelector("#btnSubmit");Object.values(email).includes("")?e.disabled=!0:e.disabled=!1}function checkEmailNewsletter(){const e=document.querySelector("#btnSubscribe");Object.values(emailNewsletter).includes("")?e.disabled=!0:e.disabled=!1}function sendEmail(e){e.preventDefault();const t=e.target;if("formHeader"===t.id){const e=document.querySelector("#spinner");return e.classList.add("form__spinner--activo"),e.classList.remove("form__spinner"),void setTimeout(()=>{e.classList.remove("form__spinner--activo"),e.classList.add("form__spinner"),resetForm();const t=document.createElement("P");t.classList.add("form__exito"),t.textContent="Mensaje envíado exitosamente",formHeader.appendChild(t),setTimeout(()=>{t.remove()},2e3)},3e3)}if("formNewsletter"===t.id){const e=document.querySelector("#spinnerNews");return e.classList.add("form__spinner--activo"),e.classList.remove("form__spinner"),void setTimeout(()=>{e.classList.remove("form__spinner--activo"),e.classList.add("form__spinner"),resetForm();const t=document.createElement("P");t.classList.add("form__exito"),t.textContent="Gracias por suscribirte",formNewsletter.appendChild(t),setTimeout(()=>{t.remove()},2e3)},3e3)}}function resetForm(){email.nombre="",email.email="",email.telefono="",emailNewsletter.emailNews="",formHeader.reset(),formNewsletter.reset(),checkEmail(),checkEmailNewsletter()}document.addEventListener("DOMContentLoaded",eventListeners);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
